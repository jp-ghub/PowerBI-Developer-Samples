@model PowerBIEmbedded_AppOwnsData.Models.EmbedConfig

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="https://npmcdn.com/es6-promise@3.2.1"></script>
<script src="~/scripts/powerbi.js"></script>
<script src="~/scripts/showcase_themes.js"></script>

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div id="errorWrapper">
        <h2>
            Error
        </h2>
        <pre>
            @Model.ErrorMessage
        </pre>
    </div>

    return;
}

<h2>Embedded Report</h2>
<div>
   
        @using (Html.BeginForm())
        {
            
            
            <div id="RLSdiv">
                <div class="inputLineTitle">From</div>
                <input type="date" id="from" />
                <div class="inputLineTitle">To</div>
                <input type="date" id="to" />
                <br /><br />
                <input id="filter" value="Reload" type="button" />
                <br /><br />
            </div>

            <div id="leftShowcaseWindow">
                <div class="editorTitle">Data colors</div>
                <div id="themesDataColorsWrapper">
                    <div id="themesList">
                    </div>
                </div>
                <div class="editorTitle">Background</div>
                <div id="themesBackgroundWrapper">
                    <div id="backgroundsList">
                    </div>
                </div>
            </div>
        }
</div>
<div id="embedContainer"></div>

<div class="infoBox">
    Eastbanc Technologies&reg <br />
    2020
</div>

@Html.Partial("LiveDemoLink")

<script>
    // Read embed application token from Model
    var accessToken = "@Model.EmbedToken.Token";

    // Read embed URL from Model
    var embedUrl = "@Html.Raw(Model.EmbedUrl)";

    // Read report Id from Model
    var embedReportId = "@Model.Id";

    // Get models. models contains enums that can be used.
    var models = window['powerbi-client'].models;


    let from = $('#from').val();
    let to = $('#to').val();
    if (!to)
        to = '1900/01/01';
    if (!from)
        from = '2999/01/01';
    from = from + " 00:00:00";
    to = to + " 00:00:00";

    const advancedFilter = {
        $schema: "http://powerbi.com/product/schema#advanced",
        target: {
            table: "Internet Sales",
            column: "Due Date"
        },
        logicalOperator: "And",
        conditions: [{
            operator: "GreaterThanOrEqual",
            value: from
        },
        {
            operator: "LessThanOrEqual",
            value: to
        }
        ]
    };
    // Embed configuration used to describe the what and how to embed.
    // This object is used when calling powerbi.embed.
    // This also includes settings and options such as filters.
    // You can find more information at https://github.com/Microsoft/PowerBI-JavaScript/wiki/Embed-Configuration-Details.
    var config = {
        type: 'report',
        tokenType: models.TokenType.Embed,
        accessToken: accessToken,
        embedUrl: embedUrl,
        id: embedReportId,
        permissions: models.Permissions.All,
        settings: {
            filterPaneEnabled: true,
            navContentPaneEnabled: true
        }
    };

    // Get a reference to the embedded report HTML element
    var reportContainer = $('#embedContainer')[0];

 
    // Embed the report and display it within the div container.
    var report = powerbi.embed(reportContainer, config);
    ThemesShowcaseState.themesReport = report;
    report.on("loaded", function () {
        let themesList = $('#themesList');

        // Set the first theme on the list as active
        themesList.find("#theme0").attr('checked', true);

        // Displaying the themes list and the backgrounds list
        themesList.show();
        $('#backgroundsList').show();
        $('#background0', '#backgroundsList').addClass("selected");
    });


    $('#filter').click(function(){
       
        // Get a reference to the embedded report HTML element
        var embedContainer = $('#embedContainer')[0];

        // Get a reference to the embedded report.
        report = powerbi.get(embedContainer);

        let from = $('#from').val();
        let to = $('#to').val();
        if (!to)
            to = '1900/01/01';
        if (!from)
            from = '2999/01/01';
        from = from + " 00:00:00";
        to = to + " 00:00:00";

        const advancedFilter = {
            $schema: "http://powerbi.com/product/schema#advanced",
            target: {
                table: "Internet Sales",
                column: "Due Date"
            },
            logicalOperator: "And",
            conditions: [{
                operator: "GreaterThanOrEqual",
                value: from
            },
            {
                operator: "LessThanOrEqual",
                value: to
            }
            ]
        };

        // Retrieve the page collection and then set the filters for the first page.
        // Pay attention that setFilters receives an array.
        report.getPages()
            .then(function (pages) {
                // Retrieve active page.
                var activePage = pages.filter(function (page) {
                    return page.isActive
                })[0];

                activePage.setFilters([advancedFilter])
                    .then(function () {
                   //     Log.logText("Page filter was set.");
                    })
                    .catch(function (errors) {
                     //   Log.log(errors);
                    });
            })
            .catch(function (errors) {
             //   Log.log(errors);
            });
    });

    $(document).ready(function () {
       
        createThemesList();
        createBackgroundsList();
    });
   
</script>